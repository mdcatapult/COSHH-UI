stages:
  - test-lint-build
  - test
  - publish
  - release-ui

default:
  image: registry.gitlab.com/medicines-discovery-catapult/informatics/docker-images/ci/node

test-lint-build-ui:
  stage: test-lint-build
  variables:
    CLIENT_ORIGIN_URL: "$DEV_CLIENT_ORIGIN_URL"
    AUTH0_DOMAIN: "$DEV_AUTH0_DOMAIN"
    AUTH0_AUDIENCE: "$DEV_AUTH0_AUDIENCE"
    AUTH0_CLIENT_ID: "$DEV_AUTH0_CLIENT_ID"
    DEPLOYMENT_ENV: "dev"
    BACKEND_URL: "$DEV_BACKEND_URL"
  before_script:
    - apt-get -yqq update && apt-get upgrade -yqq chromium libxss1 xvfb
    - export CHROME_BIN=/usr/bin/chromium
    - npm install
  script:
    - npx eslint .
    - npm run test:ci
    - npm run build --configuration=development
  coverage: /Lines\s+:\s(\d+\.?\d*)%\s\(\s\d+\/\d+\s\)/
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

publish-ui:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ''
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR
      --build-arg VERSION_HASH=$CI_COMMIT_SHORT_SHA
      --build-arg CLIENT_ORIGIN_URL=$DEV_CLIENT_ORIGIN_URL
      --build-arg AUTH0_DOMAIN=$DEV_AUTH0_DOMAIN
      --build-arg AUTH0_AUDIENCE=$DEV_AUTH0_AUDIENCE
      --build-arg AUTH0_CLIENT_ID=$DEV_AUTH0_CLIENT_ID
      --build-arg DEPLOYMENT_ENV=dev
      --build-arg BACKEND_URL=$DEV_BACKEND_URL
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      --dockerfile $CI_PROJECT_DIR/Dockerfile-dev
  except:
    refs:
      - main
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

publish-ui-main:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ''
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR
      --build-arg VERSION_HASH=$CI_COMMIT_SHORT_SHA
      --build-arg CLIENT_ORIGIN_URL=$PROD_CLIENT_ORIGIN_URL
      --build-arg AUTH0_DOMAIN=$PROD_AUTH0_DOMAIN
      --build-arg AUTH0_AUDIENCE=$PROD_AUTH0_AUDIENCE
      --build-arg AUTH0_CLIENT_ID=$PROD_AUTH0_CLIENT_ID
      --build-arg DEPLOYMENT_ENV=prod
      --build-arg BACKEND_URL=$PROD_BACKEND_URL
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
      --destination $CI_REGISTRY_IMAGE:latest
      --dockerfile $CI_PROJECT_DIR/Dockerfile
  only:
    refs:
      - tags
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"

release-ui:
  stage: release-ui
  script:
    - git checkout main; git pull
    - cictl exec release node
  only:
    refs:
     - main
  except:
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"

container_scanning:
  stage: test-lint-build
  variables:
    CS_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    GIT_STRATEGY: fetch

dependency_scanning:
    stage: test-lint-build

sast:
  stage: test-lint-build

secret_detection:
  stage: test-lint-build

include:
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/SAST-IaC.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml


